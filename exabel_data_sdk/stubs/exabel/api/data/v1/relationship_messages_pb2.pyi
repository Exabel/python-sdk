"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright (c) 2019-2022 Exabel AS. All rights reserved."""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.struct_pb2
import sys
if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class RelationshipType(google.protobuf.message.Message):
    """A relationship type resource in the Data API."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    READ_ONLY_FIELD_NUMBER: builtins.int
    IS_OWNERSHIP_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    name: builtins.str
    'Unique resource name of the relationship type, e.g.\n    `relationshipTypes/namespace.relationshipTypeIdentifier`.\n    The namespace must be empty (being global) or a namespace accessible to the customer.\n    The relationship type identifier must match the regex `[A-Z][A-Z0-9_]{0,63}`.\n    '
    description: builtins.str
    'This is currently not used in the Exabel app, but may be in future.'
    read_only: builtins.bool
    'Global relationship types and those from data sets that you subscribe to will be read-only.'
    is_ownership: builtins.bool
    'Whether this relationship type specifies an `ownership` in the data set model. Ownership\n    relationships must go *from* the owner *to* the child entity.\n    '

    @property
    def properties(self) -> google.protobuf.struct_pb2.Struct:
        """Additional properties of this relationship type. This is currently not used in the Exabel app,
        but may be in future.
        """

    def __init__(self, *, name: builtins.str | None=..., description: builtins.str | None=..., read_only: builtins.bool | None=..., is_ownership: builtins.bool | None=..., properties: google.protobuf.struct_pb2.Struct | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['properties', b'properties']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['description', b'description', 'is_ownership', b'is_ownership', 'name', b'name', 'properties', b'properties', 'read_only', b'read_only']) -> None:
        ...
global___RelationshipType = RelationshipType

@typing_extensions.final
class Relationship(google.protobuf.message.Message):
    """A relationship resource in the Data API. All relationships have one relationship type as its
    parent. Relationships do not have resource names, but are identified by their (type, from, to)
    triple. There can only be one relationship of one type between two entities (as viewed by a
    single user). The namespaces of the end points must either be empty (being global) or one of the
    predetermined namespaces the customer has access to.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARENT_FIELD_NUMBER: builtins.int
    FROM_ENTITY_FIELD_NUMBER: builtins.int
    TO_ENTITY_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    READ_ONLY_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    parent: builtins.str
    'Parent relationship type, e.g. `relationshipTypes/ns.type1`.'
    from_entity: builtins.str
    'Resource name of entity the relationship starts from, e.g.\n    `entityTypes/ns.type1/entities/ns.entity1`.\n    '
    to_entity: builtins.str
    'Resource name of entity the relationship goes to, e.g.\n    `entityTypes/ns.type2/entities/ns.entity2`.\n    '
    description: builtins.str
    'This is currently not used in the Exabel app, but may be in future.'
    read_only: builtins.bool
    'Global relationships and those from data sets that you subscribe to will be read-only.'

    @property
    def properties(self) -> google.protobuf.struct_pb2.Struct:
        """Additional properties of this relationship. This is currently not used in the Exabel app, but
        may be in future.
        """

    def __init__(self, *, parent: builtins.str | None=..., from_entity: builtins.str | None=..., to_entity: builtins.str | None=..., description: builtins.str | None=..., read_only: builtins.bool | None=..., properties: google.protobuf.struct_pb2.Struct | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['properties', b'properties']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['description', b'description', 'from_entity', b'from_entity', 'parent', b'parent', 'properties', b'properties', 'read_only', b'read_only', 'to_entity', b'to_entity']) -> None:
        ...
global___Relationship = Relationship