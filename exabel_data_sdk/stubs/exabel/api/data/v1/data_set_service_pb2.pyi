"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright (c) 2019-2022 Exabel AS. All rights reserved."""
import builtins
import collections.abc
from ..... import exabel
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import sys
if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ListDataSetsRequest(google.protobuf.message.Message):
    """The request to list data sets."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(self) -> None:
        ...
global___ListDataSetsRequest = ListDataSetsRequest

@typing_extensions.final
class ListDataSetsResponse(google.protobuf.message.Message):
    """The response to list data sets. Returns all known data sets."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_SETS_FIELD_NUMBER: builtins.int

    @property
    def data_sets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[exabel.api.data.v1.data_set_messages_pb2.DataSet]:
        """List of data sets."""

    def __init__(self, *, data_sets: collections.abc.Iterable[exabel.api.data.v1.data_set_messages_pb2.DataSet] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['data_sets', b'data_sets']) -> None:
        ...
global___ListDataSetsResponse = ListDataSetsResponse

@typing_extensions.final
class GetDataSetRequest(google.protobuf.message.Message):
    """The request to get one data set."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    'The resource name of the requested data set, for example `dataSets/ns.set1`.'

    def __init__(self, *, name: builtins.str | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['name', b'name']) -> None:
        ...
global___GetDataSetRequest = GetDataSetRequest

@typing_extensions.final
class CreateDataSetRequest(google.protobuf.message.Message):
    """The response to create one data set."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_SET_FIELD_NUMBER: builtins.int

    @property
    def data_set(self) -> exabel.api.data.v1.data_set_messages_pb2.DataSet:
        """The data set to create."""

    def __init__(self, *, data_set: exabel.api.data.v1.data_set_messages_pb2.DataSet | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['data_set', b'data_set']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['data_set', b'data_set']) -> None:
        ...
global___CreateDataSetRequest = CreateDataSetRequest

@typing_extensions.final
class UpdateDataSetRequest(google.protobuf.message.Message):
    """The request to update one data set."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_SET_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    ALLOW_MISSING_FIELD_NUMBER: builtins.int

    @property
    def data_set(self) -> exabel.api.data.v1.data_set_messages_pb2.DataSet:
        """The data set to update."""

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Use this to update only selected fields. For example, specify `display_name` to update only
        the display name. If the `signals` field is updated, the new list will replace the existing
        list. If `allow_missing` is set, this field is ignored.

        For REST requests, this is a comma-separated string.
        """
    allow_missing: builtins.bool
    'If set to `true`, a new data set will be created if it did not exist, and `update_mask` is\n    ignored.\n    '

    def __init__(self, *, data_set: exabel.api.data.v1.data_set_messages_pb2.DataSet | None=..., update_mask: google.protobuf.field_mask_pb2.FieldMask | None=..., allow_missing: builtins.bool | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['data_set', b'data_set', 'update_mask', b'update_mask']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['allow_missing', b'allow_missing', 'data_set', b'data_set', 'update_mask', b'update_mask']) -> None:
        ...
global___UpdateDataSetRequest = UpdateDataSetRequest

@typing_extensions.final
class DeleteDataSetRequest(google.protobuf.message.Message):
    """The request to delete one data set."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    'The resource name of the data set to delete, for example `dataSets/ns.set1`.'

    def __init__(self, *, name: builtins.str | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['name', b'name']) -> None:
        ...
global___DeleteDataSetRequest = DeleteDataSetRequest