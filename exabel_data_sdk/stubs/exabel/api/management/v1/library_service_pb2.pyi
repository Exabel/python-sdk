"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright (c) 2022 Exabel AS. All rights reserved."""
import builtins
import collections.abc
from ..... import exabel
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import sys
if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ListFoldersRequest(google.protobuf.message.Message):
    """Request to ListFolders."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(self) -> None:
        ...
global___ListFoldersRequest = ListFoldersRequest

@typing_extensions.final
class ListFoldersResponse(google.protobuf.message.Message):
    """Response from ListFolders."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDERS_FIELD_NUMBER: builtins.int

    @property
    def folders(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[exabel.api.management.v1.folder_messages_pb2.Folder]:
        """List of accessible folders.

        The items field for each folder will be empty when listing folders - use the "Get folder"
        or "List folder items" methods to retrieve items.
        """

    def __init__(self, *, folders: collections.abc.Iterable[exabel.api.management.v1.folder_messages_pb2.Folder] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['folders', b'folders']) -> None:
        ...
global___ListFoldersResponse = ListFoldersResponse

@typing_extensions.final
class GetFolderRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    'The folder resource name.'

    def __init__(self, *, name: builtins.str | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['name', b'name']) -> None:
        ...
global___GetFolderRequest = GetFolderRequest

@typing_extensions.final
class CreateFolderRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_FIELD_NUMBER: builtins.int

    @property
    def folder(self) -> exabel.api.management.v1.folder_messages_pb2.Folder:
        """The folder to create. Only the display name and description can be set."""

    def __init__(self, *, folder: exabel.api.management.v1.folder_messages_pb2.Folder | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['folder', b'folder']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['folder', b'folder']) -> None:
        ...
global___CreateFolderRequest = CreateFolderRequest

@typing_extensions.final
class UpdateFolderRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    ALLOW_MISSING_FIELD_NUMBER: builtins.int

    @property
    def folder(self) -> exabel.api.management.v1.folder_messages_pb2.Folder:
        """The updated folder. The resource name must be set. Only the display name, and description can
        be set.
        """

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Use this to update only selected fields. For example, specify `display_name` to update only the
        display name. If `allow_missing` is set, this field is ignored.
        Currently, only the display name and description may be modified.

        For REST requests, this is a comma-separated string.
        """
    allow_missing: builtins.bool
    'If set to `true`, a new folder will be created if it did not exist, and `update_mask` is\n    ignored.\n    '

    def __init__(self, *, folder: exabel.api.management.v1.folder_messages_pb2.Folder | None=..., update_mask: google.protobuf.field_mask_pb2.FieldMask | None=..., allow_missing: builtins.bool | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['folder', b'folder', 'update_mask', b'update_mask']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['allow_missing', b'allow_missing', 'folder', b'folder', 'update_mask', b'update_mask']) -> None:
        ...
global___UpdateFolderRequest = UpdateFolderRequest

@typing_extensions.final
class DeleteFolderRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    'The resource name of the folder to delete, for example `folders/1`.'

    def __init__(self, *, name: builtins.str | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['name', b'name']) -> None:
        ...
global___DeleteFolderRequest = DeleteFolderRequest

@typing_extensions.final
class ListItemsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARENT_FIELD_NUMBER: builtins.int
    ITEM_TYPE_FIELD_NUMBER: builtins.int
    parent: builtins.str
    'The folder to list items from. Optional.'
    item_type: exabel.api.management.v1.folder_messages_pb2.FolderItemType.ValueType
    'Specify an item type to list.'

    def __init__(self, *, parent: builtins.str | None=..., item_type: exabel.api.management.v1.folder_messages_pb2.FolderItemType.ValueType | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['item_type', b'item_type', 'parent', b'parent']) -> None:
        ...
global___ListItemsRequest = ListItemsRequest

@typing_extensions.final
class ListItemsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ITEMS_FIELD_NUMBER: builtins.int

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[exabel.api.management.v1.folder_messages_pb2.FolderItem]:
        """List of folder items."""

    def __init__(self, *, items: collections.abc.Iterable[exabel.api.management.v1.folder_messages_pb2.FolderItem] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['items', b'items']) -> None:
        ...
global___ListItemsResponse = ListItemsResponse

@typing_extensions.final
class MoveItemsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ITEMS_FIELD_NUMBER: builtins.int
    TARGET_FOLDER_FIELD_NUMBER: builtins.int

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of resource names of the items to move, e.g. `models/123` or `derivedSignals/987`."""
    target_folder: builtins.str
    'The resource name of the target folder, for example `folders/10`.'

    def __init__(self, *, items: collections.abc.Iterable[builtins.str] | None=..., target_folder: builtins.str | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['items', b'items', 'target_folder', b'target_folder']) -> None:
        ...
global___MoveItemsRequest = MoveItemsRequest

@typing_extensions.final
class MoveItemsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(self) -> None:
        ...
global___MoveItemsResponse = MoveItemsResponse

@typing_extensions.final
class ListFolderAccessorsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    'The folder resource name.'

    def __init__(self, *, name: builtins.str | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['name', b'name']) -> None:
        ...
global___ListFolderAccessorsRequest = ListFolderAccessorsRequest

@typing_extensions.final
class ListFolderAccessorsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_ACCESSORS_FIELD_NUMBER: builtins.int

    @property
    def folder_accessors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[exabel.api.management.v1.folder_messages_pb2.FolderAccessor]:
        """List of user groups with access to the folder. This does not include the users in each user
        group - those may be queried through the UserService.
        """

    def __init__(self, *, folder_accessors: collections.abc.Iterable[exabel.api.management.v1.folder_messages_pb2.FolderAccessor] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['folder_accessors', b'folder_accessors']) -> None:
        ...
global___ListFolderAccessorsResponse = ListFolderAccessorsResponse

@typing_extensions.final
class ShareFolderRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_FIELD_NUMBER: builtins.int
    GROUP_FIELD_NUMBER: builtins.int
    WRITE_FIELD_NUMBER: builtins.int
    folder: builtins.str
    'Resource name of the folder to share.'
    group: builtins.str
    'Resource name of the user group to share the folder with.'
    write: builtins.bool
    'Whether the user group should have write access.'

    def __init__(self, *, folder: builtins.str | None=..., group: builtins.str | None=..., write: builtins.bool | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['folder', b'folder', 'group', b'group', 'write', b'write']) -> None:
        ...
global___ShareFolderRequest = ShareFolderRequest

@typing_extensions.final
class UnshareFolderRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_FIELD_NUMBER: builtins.int
    GROUP_FIELD_NUMBER: builtins.int
    folder: builtins.str
    'Resource name of the folder to unshare.'
    group: builtins.str
    'Resource name of the user group to unshare the folder from.'

    def __init__(self, *, folder: builtins.str | None=..., group: builtins.str | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['folder', b'folder', 'group', b'group']) -> None:
        ...
global___UnshareFolderRequest = UnshareFolderRequest

@typing_extensions.final
class SearchItemsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FOLDER_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    ITEM_TYPE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    folder: builtins.str
    'Resource name of the folder to search in. Only "folders/-", meaning all folders, is supported.'
    query: builtins.str
    'Search query.'
    item_type: exabel.api.management.v1.folder_messages_pb2.FolderItemType.ValueType
    'The type of items to search for.\n    If not set, all types are included in the result.\n    '
    page_token: builtins.str
    'Token for a specific page of results, as returned from a previous search request with the same\n    query parameters.\n    '
    page_size: builtins.int
    'Maximum number of results to return. Defaults to 20.'

    def __init__(self, *, folder: builtins.str | None=..., query: builtins.str | None=..., item_type: exabel.api.management.v1.folder_messages_pb2.FolderItemType.ValueType | None=..., page_token: builtins.str | None=..., page_size: builtins.int | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['folder', b'folder', 'item_type', b'item_type', 'page_size', b'page_size', 'page_token', b'page_token', 'query', b'query']) -> None:
        ...
global___SearchItemsRequest = SearchItemsRequest

@typing_extensions.final
class SearchItemsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESULTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int

    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[exabel.api.management.v1.folder_messages_pb2.SearchResult]:
        """Search results."""
    next_page_token: builtins.str
    'Continuation token. If non-empty, there may be more results to retrieve.'

    def __init__(self, *, results: collections.abc.Iterable[exabel.api.management.v1.folder_messages_pb2.SearchResult] | None=..., next_page_token: builtins.str | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['next_page_token', b'next_page_token', 'results', b'results']) -> None:
        ...
global___SearchItemsResponse = SearchItemsResponse