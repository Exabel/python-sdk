"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright (c) 2025 Exabel AS. All rights reserved."""
import builtins
import collections.abc
from ..... import exabel
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class ListKpiMappingResultsRequest(google.protobuf.message.Message):
    """Request to ListKpiMappingResults."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: builtins.str
    'Resource name of the KPI mapping to list results of.\n    Example: `kpiMappings/123`.\n    '
    page_size: builtins.int
    'Maximum number of entities to return. Defaults to 20, and the maximum allowed value is 100.'
    page_token: builtins.str
    'Token for a specific page of results, as returned from a previous list request with the same\n    query parameters.\n    '

    def __init__(self, *, parent: builtins.str | None=..., page_size: builtins.int | None=..., page_token: builtins.str | None=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['page_size', b'page_size', 'page_token', b'page_token', 'parent', b'parent']) -> None:
        ...
global___ListKpiMappingResultsRequest = ListKpiMappingResultsRequest

@typing.final
class ListKpiMappingResultsResponse(google.protobuf.message.Message):
    """Response from ListKpiMappingResults."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESULTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    TOTAL_SIZE_FIELD_NUMBER: builtins.int
    next_page_token: builtins.str
    'Token for the next page of results, which can be sent to a subsequent list query.'
    total_size: builtins.int
    'Total number of rows, irrespective of paging.'

    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[exabel.api.analytics.v1.kpi_messages_pb2.CompanyKpiMappingResults]:
        """List of results, one for each company. The end of the list is reached when the token is empty."""

    def __init__(self, *, results: collections.abc.Iterable[exabel.api.analytics.v1.kpi_messages_pb2.CompanyKpiMappingResults] | None=..., next_page_token: builtins.str | None=..., total_size: builtins.int | None=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['next_page_token', b'next_page_token', 'results', b'results', 'total_size', b'total_size']) -> None:
        ...
global___ListKpiMappingResultsResponse = ListKpiMappingResultsResponse

@typing.final
class ListCompanyBaseModelResultsRequest(google.protobuf.message.Message):
    """Request to ListCompanyBaseModelResults."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARENT_FIELD_NUMBER: builtins.int
    PERIOD_FIELD_NUMBER: builtins.int
    KPI_SOURCE_FIELD_NUMBER: builtins.int
    parent: builtins.str
    'Resource name of the company get results for.'
    kpi_source: exabel.api.analytics.v1.kpi_messages_pb2.KpiSource.ValueType
    'Optional KPI source.\n    If not specified, all KPIs are returned.\n    '

    @property
    def period(self) -> exabel.api.analytics.v1.kpi_messages_pb2.FiscalPeriodSelector:
        """The fiscal period and frequency to get results for.
        If not specified, `RelativeFiscalPeriodSelector.CURRENT` is used and frequency is
        determined based on KPI counts. The frequency with the most number of KPIs with
        mappings for the user is used.
        """

    def __init__(self, *, parent: builtins.str | None=..., period: exabel.api.analytics.v1.kpi_messages_pb2.FiscalPeriodSelector | None=..., kpi_source: exabel.api.analytics.v1.kpi_messages_pb2.KpiSource.ValueType | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['period', b'period']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['kpi_source', b'kpi_source', 'parent', b'parent', 'period', b'period']) -> None:
        ...
global___ListCompanyBaseModelResultsRequest = ListCompanyBaseModelResultsRequest

@typing.final
class ListCompanyBaseModelResultsResponse(google.protobuf.message.Message):
    """Response from ListCompanyBaseModelResults."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESULTS_FIELD_NUMBER: builtins.int

    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[exabel.api.analytics.v1.kpi_messages_pb2.CompanyKpiModelResult]:
        """List of results."""

    def __init__(self, *, results: collections.abc.Iterable[exabel.api.analytics.v1.kpi_messages_pb2.CompanyKpiModelResult] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['results', b'results']) -> None:
        ...
global___ListCompanyBaseModelResultsResponse = ListCompanyBaseModelResultsResponse

@typing.final
class ListCompanyHierarchicalModelResultsRequest(google.protobuf.message.Message):
    """Request to ListCompanyHierarchicalModelResults."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARENT_FIELD_NUMBER: builtins.int
    PERIOD_FIELD_NUMBER: builtins.int
    KPI_SOURCE_FIELD_NUMBER: builtins.int
    parent: builtins.str
    'Resource name of the company get results for.'
    kpi_source: exabel.api.analytics.v1.kpi_messages_pb2.KpiSource.ValueType
    'Optional KPI source.\n    If not specified, all KPIs are returned.\n    '

    @property
    def period(self) -> exabel.api.analytics.v1.kpi_messages_pb2.FiscalPeriodSelector:
        """The fiscal period and frequency to get results for.
        If not specified, `RelativeFiscalPeriodSelector.CURRENT` is used and frequency is
        determined based on KPI counts. The frequency with the most number of KPIs with
        mappings for the user is used.
        """

    def __init__(self, *, parent: builtins.str | None=..., period: exabel.api.analytics.v1.kpi_messages_pb2.FiscalPeriodSelector | None=..., kpi_source: exabel.api.analytics.v1.kpi_messages_pb2.KpiSource.ValueType | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['period', b'period']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['kpi_source', b'kpi_source', 'parent', b'parent', 'period', b'period']) -> None:
        ...
global___ListCompanyHierarchicalModelResultsRequest = ListCompanyHierarchicalModelResultsRequest

@typing.final
class ListCompanyHierarchicalModelResultsResponse(google.protobuf.message.Message):
    """Response from ListCompanyHierarchicalModelResults."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESULTS_FIELD_NUMBER: builtins.int
    KPI_HIERARCHY_FIELD_NUMBER: builtins.int

    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[exabel.api.analytics.v1.kpi_messages_pb2.CompanyKpiModelResult]:
        """List of results."""

    @property
    def kpi_hierarchy(self) -> exabel.api.analytics.v1.kpi_messages_pb2.KpiHierarchy:
        """The KPI hierarchy for the company."""

    def __init__(self, *, results: collections.abc.Iterable[exabel.api.analytics.v1.kpi_messages_pb2.CompanyKpiModelResult] | None=..., kpi_hierarchy: exabel.api.analytics.v1.kpi_messages_pb2.KpiHierarchy | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['kpi_hierarchy', b'kpi_hierarchy']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['kpi_hierarchy', b'kpi_hierarchy', 'results', b'results']) -> None:
        ...
global___ListCompanyHierarchicalModelResultsResponse = ListCompanyHierarchicalModelResultsResponse

@typing.final
class ListCompanyKpiMappingResultsRequest(google.protobuf.message.Message):
    """Request to ListCompanyKpiMappingResults."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARENT_FIELD_NUMBER: builtins.int
    KPI_FIELD_NUMBER: builtins.int
    parent: builtins.str
    'Resource name of the company to get KPI mapping results for.'

    @property
    def kpi(self) -> exabel.api.analytics.v1.kpi_messages_pb2.Kpi:
        """KPI to get KPI mapping results for.
        The fields `type`, `value` and `freq` must be specified.
        """

    def __init__(self, *, parent: builtins.str | None=..., kpi: exabel.api.analytics.v1.kpi_messages_pb2.Kpi | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['kpi', b'kpi']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['kpi', b'kpi', 'parent', b'parent']) -> None:
        ...
global___ListCompanyKpiMappingResultsRequest = ListCompanyKpiMappingResultsRequest

@typing.final
class ListCompanyKpiMappingResultsResponse(google.protobuf.message.Message):
    """Response from ListCompanyKpiMappingResults."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    RESULTS_FIELD_NUMBER: builtins.int

    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[exabel.api.analytics.v1.kpi_messages_pb2.KpiMappingResultData]:
        """KPI mapping results."""

    def __init__(self, *, results: collections.abc.Iterable[exabel.api.analytics.v1.kpi_messages_pb2.KpiMappingResultData] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing.Literal['results', b'results']) -> None:
        ...
global___ListCompanyKpiMappingResultsResponse = ListCompanyKpiMappingResultsResponse

@typing.final
class ListCompanyKpiModelResultsRequest(google.protobuf.message.Message):
    """Request to ListCompanyKpiModelResults."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARENT_FIELD_NUMBER: builtins.int
    KPI_FIELD_NUMBER: builtins.int
    parent: builtins.str
    'Resource name of the company to get model results for.'

    @property
    def kpi(self) -> exabel.api.analytics.v1.kpi_messages_pb2.Kpi:
        """KPI to get model results for.
        The fields `type`, `value` and `freq` must be specified.
        """

    def __init__(self, *, parent: builtins.str | None=..., kpi: exabel.api.analytics.v1.kpi_messages_pb2.Kpi | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['kpi', b'kpi']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['kpi', b'kpi', 'parent', b'parent']) -> None:
        ...
global___ListCompanyKpiModelResultsRequest = ListCompanyKpiModelResultsRequest

@typing.final
class ListCompanyKpiModelResultsResponse(google.protobuf.message.Message):
    """Response from ListCompanyKpiModelResults."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EXABEL_MODEL_FIELD_NUMBER: builtins.int
    HIERARCHICAL_MODEL_FIELD_NUMBER: builtins.int
    CUSTOM_MODELS_FIELD_NUMBER: builtins.int
    KPI_MAPPING_MODELS_FIELD_NUMBER: builtins.int

    @property
    def exabel_model(self) -> exabel.api.analytics.v1.kpi_messages_pb2.KpiModel:
        """Exabel model."""

    @property
    def hierarchical_model(self) -> exabel.api.analytics.v1.kpi_messages_pb2.KpiModel:
        """Hierarchical model."""

    @property
    def custom_models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[exabel.api.analytics.v1.kpi_messages_pb2.KpiModel]:
        """Custom models."""

    @property
    def kpi_mapping_models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[exabel.api.analytics.v1.kpi_messages_pb2.KpiMappingModel]:
        """Single-predictor KPI mapping models."""

    def __init__(self, *, exabel_model: exabel.api.analytics.v1.kpi_messages_pb2.KpiModel | None=..., hierarchical_model: exabel.api.analytics.v1.kpi_messages_pb2.KpiModel | None=..., custom_models: collections.abc.Iterable[exabel.api.analytics.v1.kpi_messages_pb2.KpiModel] | None=..., kpi_mapping_models: collections.abc.Iterable[exabel.api.analytics.v1.kpi_messages_pb2.KpiMappingModel] | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['exabel_model', b'exabel_model', 'hierarchical_model', b'hierarchical_model']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['custom_models', b'custom_models', 'exabel_model', b'exabel_model', 'hierarchical_model', b'hierarchical_model', 'kpi_mapping_models', b'kpi_mapping_models']) -> None:
        ...
global___ListCompanyKpiModelResultsResponse = ListCompanyKpiModelResultsResponse